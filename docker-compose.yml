version: '3'

services:

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      # Mac使用
      # - dolife-sync:/var/www/html/:rw
      - ./www:/var/www/html/:rw # windows 系统使用
      - ./conf/nginx/conf.d:/etc/nginx/conf.d/:ro
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./log/nginx/:/var/log/nginx/:rw
    links:
      - php71:fpm
    networks:
      docker_net:
        ipv4_address: 172.102.2.2

  php71:
    build: ./php/php71/
    expose:
      - "9000"
    volumes:
      # Mac使用
      # - dolife-sync:/var/www/html/:rw
      - ./www:/var/www/html/:rw
      - ./conf/php/php72.ini:/usr/local/etc/php/php.ini:ro
      - ./conf/php/php-fpm.d/www72.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      - ./log/php-fpm/:/var/log/php-fpm/:rw
#    links:
#      - mysql:mysql
#      - redis:redis

#    command:
#      - /bin/sh
#      - -c
#      - |
#          cd /var/www/html
#          composer install
#          composer dump-autoload -o
#          composer clearcache

    networks:
      docker_net:
        ipv4_address: 172.102.2.3
#
#  mysql:
#    image: mysql:5.6
#    ports:
#      - "3306:3306"
#    volumes:
#      - ./conf/mysql/my.cnf:/etc/mysql/my.cnf:ro
#      - ./mysql/:/var/lib/mysql/:rw
#      - ./log/mysql/:/var/log/mysql/:rw
#    environment:
#      MYSQL_ROOT_PASSWORD: "123456"
#    networks:
#      docker_net:
#        ipv4_address: 172.102.2.4
#
#  redis:
#    image: redis:latest
#    ports:
#      - "6379:6379"
#    networks:
#      docker_net:
#        ipv4_address: 172.102.2.5

networks:
  docker_net:
    driver: bridge
    ipam:
      driver: default
      config:
        -
          subnet: "172.102.2.0/16"

# Mac操作系统使用，需要先执行docker-sync start
# volumes:
#   dev-sync:
#     external: true
